name: C++ CI (Reusable)

on:
  workflow_call:
    inputs:
      build-type:
        description: 'CMake build type'
        required: false
        type: string
        default: 'Release'

      cpp-compiler:
        description: 'C++ compiler'
        required: false
        type: string
        default: 'g++'

      cmake-options:
        description: 'Extra CMake options'
        required: false
        type: string
        default: ''

      run-tests:
        description: 'Run ctest'
        required: false
        type: boolean
        default: true

      enable-cache:
        description: 'Enable sccache'
        required: false
        type: boolean
        default: true

      runner-type:
        description: 'Runner type'
        required: false
        type: string
        default: 'ubuntu-latest'

      use-ninja:
        description: 'Use Ninja'
        required: false
        type: boolean
        default: true

    outputs:
      build-result:
        value: ${{ jobs.build.outputs.result }}

jobs:
  build:
    name: Build and Test
    runs-on: ${{ inputs.runner-type }}
    outputs:
      result: ${{ steps.summary.outputs.result }}

    steps:
      - uses: actions/checkout@v4

      - name: Install deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      - name: Install sccache
        if: ${{ inputs.enable-cache }}
        run: |
          SCCACHE_VERSION=0.7.7
          FILE=sccache-v$SCCACHE_VERSION-x86_64-unknown-linux-musl
          curl -L https://github.com/mozilla/sccache/releases/download/v$SCCACHE_VERSION/$FILE.tar.gz | tar xz
          sudo mv $FILE/sccache /usr/local/bin/
          chmod +x /usr/local/bin/sccache

      - name: Configure sccache
        if: ${{ inputs.enable-cache }}
        run: |
          echo "CMAKE_C_COMPILER_LAUNCHER=sccache" >> $GITHUB_ENV
          echo "CMAKE_CXX_COMPILER_LAUNCHER=sccache" >> $GITHUB_ENV

      - name: Cache sccache
        if: ${{ inputs.enable-cache }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/sccache
          key: sccache-${{ runner.os }}-${{ inputs.cpp-compiler }}-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Configure CMake
        run: |
          GEN=""
          [ "${{ inputs.use-ninja }}" == "true" ] && GEN="-G Ninja"
          cmake -B build $GEN \
            -DCMAKE_BUILD_TYPE=${{ inputs.build-type }} \
            -DCMAKE_CXX_COMPILER=${{ inputs.cpp-compiler }} \
            ${{ inputs.cmake-options }}

      - name: Build
        run: cmake --build build -j$(nproc)

      - name: sccache stats
        if: ${{ inputs.enable-cache }}
        run: sccache --show-stats

      - name: Test
        if: ${{ inputs.run-tests }}
        run: ctest --test-dir build --output-on-failure -j$(nproc)

      - name: Summary
        id: summary
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "result=✅ Passed" >> $GITHUB_OUTPUT
          else
            echo "result=❌ Failed" >> $GITHUB_OUTPUT
          fi
